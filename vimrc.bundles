if &compatible
  set nocompatible
end

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
Plug 'benekastah/neomake'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'pbrisbin/vim-mkdir'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby', { 'for': 'ruby' }
Plug 'slim-template/vim-slim'
Plug 'vim-scripts/ctags.vim'
Plug 'vim-scripts/matchit.zip'
Plug 'vim-scripts/tComment'
Plug 'fatih/vim-go', { 'for': 'go' }
Plug 'eterps/vim-godebug', { 'for': 'go' }
Plug 'jimenezrick/vimerl', { 'for': 'erlang' }
Plug 'elixir-lang/vim-elixir', { 'for': 'elixir' }
Plug 'keith/parsec.vim'
Plug 'godlygeek/tabular'
Plug 'janko-m/vim-test'
Plug 'endel/vim-github-colorscheme'
Plug 'isRuslan/vim-es6'
Plug 'sonph/onehalf', {'rtp': 'vim/'}
Plug 'lotabout/skim', { 'dir': '~/.skim', 'do': './install' }
Plug 'wakatime/vim-wakatime'
Plug 'elzr/vim-json'
Plug 'jparise/vim-graphql'
Plug 'rhysd/vim-crystal'
Plug 'ncm2/ncm2'
Plug 'nsf/gocode', { 'rtp': 'nvim', 'do': '~/.config/nvim/plugged/gocode/nvim/symlink.sh' }
Plug 'soft-aesthetic/soft-era-vim'
Plug 'dense-analysis/ale'

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
